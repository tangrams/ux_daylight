import:
    - https://tangrams.github.io/ux_daylight/ux_daylight.yaml

    - https://tangrams.github.io/blocks/global.yaml
    - https://tangrams.github.io/blocks/elevation/normal.yaml
    - https://tangrams.github.io/blocks/generative/noise.yaml
    - https://tangrams.github.io/blocks/functions/zoom.yaml
    - https://tangrams.github.io/blocks/filter/height.yaml
    - https://tangrams.github.io/blocks/filter/grid.yaml
    - https://tangrams.github.io/blocks/geometry/dynamic-height.yaml

sources:
    mapzen: 
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=mapzen-QF1osLn
        max_zoom: 16
        rasters: [normals]
    normals:
        type: Raster
        url: https://tile.mapzen.com/mapzen/terrain/v1/normal/{z}/{x}/{y}.png?api_key=mapzen-QF1osLn
        max_zoom: 15

scene:
    background:
        color: black

lights:
    default_light:
        type: directional
        ambient: .0
        diffuse: 1.
        specular: 1.
        direction: [0.,0.,0.]

layers:
    earth:
        data: { source: mapzen }
        draw:
            earth:
                order: global.order
                color: gray
    water:
        data: { source: mapzen }
        draw:
            water:
                order: global.order
                color: [.1,.15,.2]             
    boundaries:
        data: { source: mapzen }
        draw:
            boundaries:
                order: global.order
                color: [0.545, 0.990, 1.000]
                width: 1px
    buildings:
        data: { source: mapzen }
        filter: { not: { location: underground } }
        draw:
            buildings:
                order: global.order
                color: white
                extrude: function() { return feature.height || 20; }
    roads:
        data: { source: mapzen }
        filter: { not: { kind: [rail, ferry] } }
        draw:
            lines:
                width: [[5,0px],[10,1px],[17, 2m]]
                style: routes
                order: global.order
                color: white
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    width: [[8,0px], [9,.25px], [10, 1.5px], [14, 2px], [16, 4px], [20, 14m]]
                    outline:
                        width: [[8,0px], [9,.125px], [11, .575px], [14, 1px], [16, 2px], [17, 1m]]
                        color: [[17,[.5,.5,.5]],[20,[0,0,0]]]
            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    lines:
                        width: [[8,0px], [14, 3px], [16, 5px], [20, 14m]]
                        outline:
                            width: [[8,0px], [14, .5px], [16, 1px], [17, .5m]]
                            color: [[17,[.5,.5,.5]],[20,[0,0,0]]]
                tunnel-link:
                    filter: {is_tunnel: true, $zoom: {min: 13} }
        tunnel:
            filter: {is_tunnel: true }
            draw:
                lines:
                    width: [[9,0px], [10,.2px], [12, 1px], [15, 1.5px], [17, 2.5px], [20, 8m]]
                    color: darkgray

        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    width: [[10,1px],[20, 16m]]

        minor_road:
            filter: { kind: minor_road, $zoom: { min: 12 } }
            draw:
                lines:
                    width: [[12,0px],[16,1px],[20, 10m]]

styles:
    earth:
        base: polygons
        raster: custom
        mix: [elevation-normal, ux_daylight]
    water:
        base: polygons
        mix: [filter-grid, ux_daylight]
        animated: true
        shaders:
            defines:
                GRID_AMOUNT: .2
    boundaries:
        base: lines
        lighting: false
        dash: [1, 2]
    landuse:
        draw:
            landuse:
                visible: false
                color: [0.000, 1.000, 0.480]
    buildings:
        base: polygons
        mix: [geometry-dynamic-height, filter-height, ux_daylight]
        material:
            ambient: 1.
            diffuse: 1.
            specular: .5
            shininess: .02
        shaders:
            defines:
                ZOOM_START: 15.0
                ZOOM_END: 20.0
                HEIGHT: zoom()
                HEIGHT_MIN: 1.0
                HEIGHT_MAX: 2.5
            blocks:
                color: |
                    light_accumulator_specular = vec4(applyEnvmap(u_envmap, normal).rgb*.5,1.);
    routes:
        base: lines
        lighting: false